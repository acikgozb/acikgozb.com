name: Deploy acikgozb.dev

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  APP_NAME: "acikgozb-dev"
  AWS_REGION: "{{ secrets.AWS_REGION }}"
  CLOUDFLARE_API_TOKEN: "{{ secrets.CLOUDFLARE_API_TOKEN }}"
  FRONTEND_ASSET_PATH: "public"

jobs:
  create-frontend-assets:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install `hugo`
        shell: bash
        run: |
          apt install hugo -y

      - name: Create frontend assets
        shell: bash
        run: |
          hugo build --destination $FRONTEND_ASSET_PATH

  deploy:
    runs-on: ubuntu-24.04
    needs: create-frontend-assets

    defaults:
      run:
        working-directory: ./terraform
        shell: bash

    steps:
      - name: Authenticate to AWS via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: "{{ env.AWS_REGION }}"
          role-to-assume: "{{ secrets.AWS_OIDC_ROLE_ARN }}"
          role-session-name: "${{ env.APP_NAME }}-gha"

      - name: Set environment
        run: |
          read -r -a tf_env < <(./scripts/exec environment)
          for env in ${tf_env[@]}; do \
            key=${env%:*} \
            value=${env#*:} \
            echo "$key=$value" >> "$GITHUB_ENV"; \
          done

      - name: Initialize Terraform
        run: |
          ./scripts/exec init

      - name: Create Terraform plan
        run: |
          ./scripts/exec plan

      - name: Apply Terraform plan
        run: |
          ./scripts/exec apply
