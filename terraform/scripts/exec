#!/usr/bin/env bash

set -euo pipefail

function dump_env {
    for ENV_KEY in {"AWS_REGION","AWS_PROFILE"}; do
        echo "$ENV_KEY: ${!ENV_KEY}"
    done
}

function init {
    terraform init \
        -backend-config region="$AWS_REGION" \
        -backend-config profile="$AWS_PROFILE" \
        -backend-config bucket="$TF_BACKEND_STATE_BUCKET" \
        -backend-config key="$TF_BACKEND_KEY" 
}

function generate_artifacts {
    cd ./scripts/redirect-worker

    npm ci
    wrangler deploy --outdir ./out --config ./wrangler.toml --dry-run

    REDIRECT_WORKER_PATH="./scripts/redirect-worker/out/index.js"

    cd - > /dev/null
}

function plan {
    generate_artifacts

    cat > ./terraform.tfvars <<-_EOF
        app_name="$APP_NAME"
        redirect_worker_path="$REDIRECT_WORKER_PATH"
_EOF

    terraform plan -var-file ./terraform.tfvars -out ./tfplan 
}

function apply {
    terraform apply ./tfplan
}

function set_vars {
    APP_NAME="acikgozb-dev"
    AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text --profile "$AWS_PROFILE")

    TF_BACKEND_STATE_BUCKET="terraform-$AWS_ACCOUNT_ID"    
    TF_BACKEND_KEY="apps/$APP_NAME.tfstate"
}

dump_env && set_vars

"$@"
